<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="face_voice_attachment">
  <resultMap class="com.zbwang.face.domain.Attach" id="FaceVoiceAttachment">
    <result column="attachment_id" jdbcType="INTEGER" property="attachmentId" />
    <result column="belong_id" jdbcType="INTEGER" property="belongId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="attachment_name" jdbcType="VARCHAR" property="attachmentName" />
    <result column="size" jdbcType="Long" property="size" />
  </resultMap>
  <resultMap class="com.zbwang.face.domain.Attach" extends="FaceVoiceAttachment" id="FaceVoiceAttachmentWithCompressFlag">
    <result column="iscompressed" jdbcType="VARCHAR" property="isCompressed" />
  </resultMap>
  <resultMap class="com.zbwang.face.domain.Attach" extends="FaceVoiceAttachment" id="FaceOriginalVoiceAttachment">
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <resultMap class="com.zbwang.face.domain.Attach" extends="FaceVoiceAttachment" id="FaceBigVoiceAttachment">
    <result column="bigcontent" jdbcType="LONGVARBINARY" property="bigContent" />
  </resultMap>
  <resultMap class="com.zbwang.face.domain.Attach" extends="FaceVoiceAttachment" id="FaceSmallVoiceAttachment">
    <result column="smallcontent" jdbcType="LONGVARBINARY" property="smallContent" />
  </resultMap>
  
  <select id="getAttachByVoiceIdGroup" parameterClass="java.util.HashMap" resultMap="FaceVoiceAttachmentWithCompressFlag">
    select attachment_id, belong_id, user_id, attachment_name, size, smallContent IS NULL AS iscompressed
    from face_voice_attachment
    where 1=1
    AND belong_id in
    <iterate open="(" close=")" conjunction="," property="voiceIds">
		#voiceIds[]:INTEGER#
	</iterate>
	<isNotEmpty prepend="AND" property="belongType">
		belong_type=#belongType:VARCHAR#
	</isNotEmpty>
  </select>
  
  <select id="getAttachNeedCompress" parameterClass="java.lang.Long" resultMap="FaceVoiceAttachment">
    select attachment_id, belong_id, user_id, attachment_name,size
    from face_voice_attachment
    where smallContent IS NULL
    <![CDATA[
    AND size < #compressPictureMaxSize:INTEGER#
    ]]>
  </select>
  
  <select id="getOriginalAttachByAttachId" parameterClass="java.lang.Integer" resultMap="FaceOriginalVoiceAttachment">
    select attachment_id, belong_id, user_id, attachment_name,size, content
    from face_voice_attachment
    where attachment_id = #attachId:INTEGER#
  </select>
  
  <select id="getBigAttachByAttachId" parameterClass="java.lang.Integer" resultMap="FaceBigVoiceAttachment">
    select attachment_id, belong_id, user_id, attachment_name,size, bigContent
    from face_voice_attachment
    where attachment_id = #attachId:INTEGER#
  </select>
  
  <select id="getSmallAttachByAttachId" parameterClass="java.lang.Integer" resultMap="FaceSmallVoiceAttachment">
    select attachment_id, belong_id, user_id, attachment_name,size, smallContent
    from face_voice_attachment
    where attachment_id = #attachId:INTEGER#
  </select>
  
  <insert id="insertVoiceAttachment" parameterClass="com.zbwang.face.domain.Attach">
    insert into face_voice_attachment (attachment_id, belong_id, belong_type,user_id, type, attachment_name, size, width, height,
      content,add_time)
    values (#attachmentId:INTEGER#, #belongId:DECIMAL#,#belongType:VARCHAR#, #userId:INTEGER#, #type:VARCHAR#,#attachmentName:VARCHAR#,
      #size:Long#, #width:INTEGER#, #height:INTEGER#, #content:LONGVARBINARY#,now());
      <selectKey resultClass="int">
		SELECT LAST_INSERT_ID() as attachmentId
	</selectKey>
  </insert>
  
   <update id="updateAttachContentByAttachId" parameterClass="com.zbwang.face.domain.Attach">
    update face_voice_attachment
    set bigContent = #bigContent:LONGVARBINARY#,
      smallContent = #smallContent:LONGVARBINARY#,
      content = null
    where attachment_id = #attachmentId:INTEGER#
  </update>
  
</sqlMap>